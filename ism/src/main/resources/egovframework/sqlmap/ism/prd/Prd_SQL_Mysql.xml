<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Sl20">

    <typeAlias alias="prd010SearchVO" type="nfm.com.prd.service.Prd010SearchVO"/>
    <typeAlias alias="prd010VO" type="nfm.com.prd.service.Prd010VO"/>
    <typeAlias alias="prd020VO" type="nfm.com.prd.service.Prd020VO"/>
    <typeAlias alias="adj030Result" type="nfm.com.adj.model.Adj030Result"/>
    <typeAlias alias="adj010SearchVO" type="nfm.com.adj.model.Adj010SearchVO"/>

    <!-- 상품코드를 만들기 위해서, 가장 마지막에 만든 상품을 가져온다. -->
    <select id="prd010DAO.selectPrd010VO" parameterClass="String" resultClass="prd010VO">
        select
        *
        from ismprd010
        where itemcode like #itemcode# '%'
        order by orderitemid desc
        limit 1
    </select>

    <!-- 결합용 부모가 아닌 모든 상품 목록 select -->
    <select id="prd010DAO.selectAll" resultClass="Prd010VO">
        select
        *
        from ismprd010
        where itemcrosstype in ('S')
        order by orderitemid desc
    </select>

    <!-- 오토서치용 select -->
    <select id="prd010DAO.selectGubun2" resultClass="Prd010VO">
        select
        *
        from ismprd010
        where itemcrosstype in ('S')
        and itemgubun in ('2', '3')
        order by orderitemid desc
    </select>

    <!-- 디테일 상품을 조회를 위해 사용한다.. -->
    <select id="prd010DAO.selectWithItemcode" resultClass="Prd010VO">
        select
        p.orderitemid,
        p.itemcat1,
        p.itemname,
        p.byc010id,
        p.itemcrosstype,
        p.itemopt,
        p.itemea,
        p.itemprice,
        p.itembuyprice,
        p.taxtype,
        p.itemdlvprice,
        p.itembuydlvprice,
        p.itemgubun,
        p.createdate,
        p.byccode,
        p.itemcode,
        p.pristock,
        p.itemsize,
        p.cartonqty,
        p.palletqty,
        p.salecode,
        p2.crossitemcode,
        p.taxfree
        from ismprd010 p
        left outer join ismprd020 p2 on p.itemcode = p2.itemcode
        where p.itemcode = #itemcode#
        limit 1
    </select>

    <!-- 상품 목록 select cnt -->
    <select id="prd010DAO.selectListTotCnt" parameterClass="prd010SearchVO" resultClass="int">
        select count(1) totcnt
        from ismprd010 p
        left outer join ismbyc010 b on p.byc010id = b.byc010id
        left outer join ismwhs010 w on p.pristock = w.whs010id
        where
            p.orderitemid > 0
        and b.byc010id is not null
        <isNotEmpty prepend="AND" property="dtSearch_frCreateDt">
            <![CDATA[
        	IF(p.createdate = '', curdate(), p.createdate) >= #dtSearch_frCreateDt#
        ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dtSearch_toCreateDt">
            <![CDATA[
        	IF(p.createdate = '', curdate(), p.createdate) <= #dtSearch_toCreateDt#
        ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcat1">
            p.itemcat1 = #dfSearch_itemcat1#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcrosstype">
            p.itemcrosstype = #dfSearch_itemcrosstype#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemgubun">
            p.itemgubun = #dfSearch_itemgubun#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_bycname">
            b.bycname LIKE '%' #dfSearch_bycname# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcode">
            p.itemcode LIKE '%' #dfSearch_itemcode# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemname">
            p.itemname LIKE '%' #dfSearch_itemname# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemopt">
            p.itemopt LIKE '%' #dfSearch_itemopt# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_whsname">
            w.whsname LIKE '%' #dfSearch_whsname# '%'
        </isNotEmpty>
    </select>

    <!-- 상품 목록 select -->
    <select id="prd010DAO.selectList" parameterClass="prd010SearchVO" resultClass="prd010VO">
        select
        p.orderitemid,
        p.itemcat1,
        p.itemname,
        p.byc010id,
        p.itemcrosstype,
        p.itemopt,
        p.itemea,
        p.itemprice,
        p.itembuyprice,
        p.taxtype,
        p.itemdlvprice,
        p.itembuydlvprice,
        p.itemgubun,
        p.createdate,
        p.byccode,
        p.itemcode,
        p.pristock,
        p.itemsize,
        p.cartonqty,
        p.palletqty,
        p.salecode as salecode,
        b.bycname,
        w.whsname
        from ismprd010 p
        left outer join ismbyc010 b on p.byc010id = b.byc010id
        left outer join ismwhs010 w on p.pristock = w.whs010id
        where
            p.orderitemid > 0
        and b.byc010id is not null
        <isNotEmpty prepend="AND" property="dtSearch_frCreateDt">
            <![CDATA[
        	IF(p.createdate = '', curdate(), p.createdate) >= #dtSearch_frCreateDt#
        ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dtSearch_toCreateDt">
            <![CDATA[
        	IF(p.createdate = '', curdate(), p.createdate) <= #dtSearch_toCreateDt#
        ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcat1">
            p.itemcat1 = #dfSearch_itemcat1#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcrosstype">
            p.itemcrosstype = #dfSearch_itemcrosstype#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemgubun">
            p.itemgubun = #dfSearch_itemgubun#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_bycname">
            b.bycname LIKE '%' #dfSearch_bycname# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemcode">
            p.itemcode LIKE '%' #dfSearch_itemcode# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemname">
            p.itemname LIKE '%' #dfSearch_itemname# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_itemopt">
            p.itemopt LIKE '%' #dfSearch_itemopt# '%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="dfSearch_whsname">
            w.whsname LIKE '%' #dfSearch_whsname# '%'
        </isNotEmpty>
        order by p.orderitemid desc
        limit #recordCountPerPage# OFFSET #firstIndex#
    </select>

    <!-- 상품 목록 select -->
    <select id="prd010DAO.selectFusionList" parameterClass="String" resultClass="prd010VO">
        select
        p.orderitemid,
        p.itemcat1,
        p.itemname,
        p.byc010id,
        p.itemcrosstype,
        p.itemopt,
        p.itemea,
        p.itemprice,
        p.itembuyprice,
        p.taxtype,
        p.itemdlvprice,
        p.itembuydlvprice,
        p.itemgubun,
        p.createdate,
        p.byccode,
        p.itemcode,
        p.pristock,
        p.itemsize,
        p.cartonqty,
        p.palletqty,
        p2.crossitemcode,
        p2.itemea as childItemea,
        b.bycname,
        w.whsname
        from ismprd010 p
        left outer join ismbyc010 b on p.byc010id = b.byc010id
        left outer join ismwhs010 w on p.pristock = w.whs010id
        left outer join ismprd020 p2 on p.itemcode = p2.itemcode
        where
        p.itemcrosstype in ('S')
        and b.byc010id is not null
        and p2.crossitemcode = #itemcode#
    </select>

    <update id="prd010DAO.updateItemWhs" parameterClass="java.util.HashMap">
        update ismprd010
        set pristock = #whsId#
        where orderitemid = #itemId#
    </update>

    <!--<update id="prd010DAO.updateCrossitemcodeInit" parameterClass="String">-->
        <!--update p-->
        <!--set itemcrosstype = 'S'-->
        <!--from ismprd010 p-->
        <!--left outer join ismprd020 p2 on p.itemcode = p2.itemcode-->
        <!--where p.crossitemcode = #itemcode#-->
    <!--</update>-->

    <delete id="prd010DAO.deleteCrossitemcode" parameterClass="String">
        delete from ismprd020
        where crossitemcode = #itemcode#
    </delete>

    <delete id="prd010DAO.deleteCrossitemcodeAtItemdelete" parameterClass="String">
        delete from ismprd020
        where itemcode = #itemcode#
    </delete>

    <!--<update id="prd010DAO.updateCrossitemcodes" parameterClass="java.util.HashMap">-->
        <!--update ismprd010-->
        <!--set itemcrosstype = 'F'-->
        <!--where itemcode in-->
        <!--<iterate property="targetItemcodes" open="(" close=")" conjunction=",">-->
            <!--#targetItemcodes[]#-->
        <!--</iterate>-->
    <!--</update>-->

    <insert id="prd010DAO.insertCrossitemcode" parameterClass="java.util.List">
        insert into ismprd020 (itemcode, crossitemcode, itemea)
        values
        <iterate conjunction=",">
            (#[].itemcode#, #[].crossitemcode#, #[].itemea#)
        </iterate>
    </insert>

    <insert id="prd010DAO.insertItem" parameterClass="java.util.HashMap">
        insert into ismprd010 (itemcat1, itemname, byc010id, itemcrosstype, itemopt, itemea, itembuyprice, itembuydlvprice, itemgubun, createdate, byccode, itemcode, pristock, itemsize, cartonqty, palletqty, taxfree, salecode)
        values (#detail_category#, #detail_itemname#, #detail_byc#, #detail_itemcrosstype#, #detail_itemopt#,
        #detail_itemea#, #detail_itembuyprice#, #detail_itembuydlvprice#, #detail_itemgubun#, now(), #byccode#, #itemcode#, #detail_pristock#, #detail_itemsize#, #detail_cartonqty#, #detail_palletqty#, #detail_taxfree#, #detail_salecode#)
    </insert>

    <update id="prd010DAO.updateItem" parameterClass="java.util.HashMap">
        update ismprd010
        set itemname = #detail_itemname#
        , itemcat1 = #detail_category#
        , byc010id = #detail_byc#
        , itemgubun = #detail_itemgubun#
        , byccode = #byccode#
        , itemopt = #detail_itemopt#
        , itemea = #detail_itemea#
        , itembuyprice = #detail_itembuyprice#
        , itembuydlvprice = #detail_itembuydlvprice#
        , salecode = #detail_salecode#
        , pristock = #detail_pristock#
        , itemsize = #detail_itemsize#
        , cartonqty = #detail_cartonqty#
        , palletqty = #detail_palletqty#
        where itemcode = #itemcode#
    </update>

    <update id="prd010DAO.updateItemForBatchUp" parameterClass="java.util.HashMap">
        update ismprd010
        set itembuyprice = #detail_itembuyprice#
        where itemcode = #itemcode#
    </update>


    <delete id="prd010DAO.prd010SelectDel" parameterClass="java.util.HashMap">
        delete from ismprd010
        where orderitemid in
        <iterate property="orderitemids" open="(" close=")" conjunction=",">
            #orderitemids[]#
        </iterate>
    </delete>

    <!-- 결합용 부모가 아닌 모든 상품 목록 select -->
    <select id="adj030DAO.selectAll" parameterClass="adj010SearchVO" resultClass="adj030Result">
        select
        'skd' as gubun,
        p.itemname as itemname,
        p.itemcode as itemcode,
        sum(s.itemea) as itemeaAll,
        (select sum(i.orderitemqty) from ismodm010 i where i.orderitemcode = p.itemcode group by i.orderitemcode limit 1) as itemeaOut,
        (select sum(i.retqty) from ismodm010 i where i.orderitemcode = p.itemcode group by i.orderitemcode limit 1) as itemeaBroken
        from ismprd010 p
        left outer join ismskd010 s on s.itemcode = p.itemcode
        where s.createdate LIKE '%' #dtSearch_frCreateDt# '%'
        and p.byc010id = #dtSearch_adj030_byc#
        and s.itemcode is not null
        group by itemcode
        union
        select
        'noskd' as gubun,
        p.itemname as itemname,
        p.itemcode as itemcode,
        (select sum(i.orderitemqty) from ismodm010 i where i.orderitemcode = p.itemcode group by i.orderitemcode limit 1) as itemeaAll,
        (select sum(i.orderitemqty) from ismodm010 i where i.orderitemcode = p.itemcode group by i.orderitemcode limit 1) as itemeaOut,
        (select sum(i.retqty) from ismodm010 i where i.orderitemcode = p.itemcode group by i.orderitemcode limit 1) as itemeaBroken
        from ismprd010 p
        left outer join ismodm010 o on o.orderitemcode = p.itemcode
        where o.closedt = REPLACE(#dtSearch_frCreateDt#,'-','')
        and p.itemgubun = 1
        and p.byc010id = #dtSearch_adj030_byc#
        and o.orderitemcode is not null
        group by itemcode
        order by itemeaAll desc
        limit #recordCountPerPage# OFFSET #firstIndex#
    </select>

</sqlMap>